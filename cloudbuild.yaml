steps:
  # Build the container image using your specific Dockerfile
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/neuro-lm:$COMMIT_SHA', '-f', 'Dockerfile.gcp', '.']
  
  # Push the container image to Container Registry with a unique tag
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/neuro-lm:$COMMIT_SHA']
  
  # Deploy to Cloud Run with the CORRECT, SECURE, and COMPLETE configuration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'neuro-lm'                     # Switched to our working service name
      - '--image'
      - 'gcr.io/$PROJECT_ID/neuro-lm:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '5000'                         # YOUR SETTING: Added back the correct port
      - '--memory'
      - '2Gi'                          # YOUR SETTING: Added back your memory limit
      - '--cpu'
      - '2'                            # YOUR SETTING: Added back your CPU limit
      - '--max-instances'
      - '10'                           # YOUR SETTING: Added back your scaling limit
      - '--add-cloudsql-instances'
      - '$PROJECT_ID:us-central1:neurolm-postgres' # MY FIX: The required SQL connection
      - '--update-secrets'
      - 'DATABASE_URL=db-password:latest' # THE SECURE WAY: Use the secret we just created

images:
  - 'gcr.io/$PROJECT_ID/neuro-lm:$COMMIT_SHA'