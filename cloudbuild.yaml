steps:
  # Build the container image using your specific Dockerfile (force clean build)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--no-cache', '-t', 'gcr.io/$PROJECT_ID/neurolm1:$COMMIT_SHA', '-f', 'Dockerfile.gcp', '.']
  
  # Push the container image to Container Registry with a unique tag
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/neurolm1:$COMMIT_SHA']
  
  # Deploy to Cloud Run with the CORRECT, SECURE, and COMPLETE configuration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'neurolm1'                     # Correct service name that matches repository
      - '--image'
      - 'gcr.io/$PROJECT_ID/neurolm1:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '5000'                         # YOUR SETTING: Added back the correct port
      - '--memory'
      - '2Gi'                          # YOUR SETTING: Added back your memory limit
      - '--cpu'
      - '2'                            # YOUR SETTING: Added back your CPU limit
      - '--max-instances'
      - '10'                           # YOUR SETTING: Added back your scaling limit

      - '--set-env-vars'
      - 'DATABASE_URL=postgresql://neondb_owner:npg_1vX6eAizKNIu@ep-curly-sea-a5lj2hxj.us-east-2.aws.neon.tech/neondb?sslmode=require'
      - '--update-secrets'
      - 'OPENROUTER_API_KEY=openrouter-key:api-key,OPENAI_API_KEY=openai-key:api-key,SECRET_KEY=secret-key:secret'

  # Ensure public access is explicitly set (fixes "Forbidden" error)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'add-iam-policy-binding'
      - 'neurolm1'
      - '--region'
      - 'us-central1'
      - '--member'
      - 'allUsers'
      - '--role'
      - 'roles/run.invoker'

images:
  - 'gcr.io/$PROJECT_ID/neurolm1:$COMMIT_SHA'
